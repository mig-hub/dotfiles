extends scss
snippet $lib
	import ${1} from "\$lib/${2}";${0}
snippet component
	import ${1} from "\$lib/components/${1}.svelte";${0}
snippet style
	<style lang='scss' >
		${0}
	</style>
snippet @debug
	{@debug ${1}}${0}
snippet #if
	{#if ${1}}
		${0}
	{/if}
snippet :else
	{:else${1}}
		${0}
snippet #each
	{#each ${1} as ${2}}
		${0}
	{/each}
snippet @html
	{@html ${1}}${0}
snippet slot
	<slot${1}/>
snippet svelte:self
	<svelte:self${1}/>${0}
snippet svelte:head
	<svelte:head>
		${0}
	</svelte:head>
snippet svelte:window
	<svelte:window${1}/>${0}
snippet svelte:body
	<svelte:body${1}/>${0}
snippet onmount
	import { onMount } from 'svelte';
	onMount( () => {
		${0}
	});
snippet stores
	import { ${0} } from "\$lib/stores";
snippet import-md
	import SvelteMarkdown from 'svelte-markdown';
snippet import-markdown
	import SvelteMarkdown from 'svelte-markdown';
snippet md
	<SvelteMarkdown
		source={ ${0} }
		options={{ gfm: true, breaks: true, mangle: false }}
	/>
snippet markdown
	<SvelteMarkdown
		source={ ${0} }
		options={{ gfm: true, breaks: true, mangle: false }}
	/>
snippet forward
	import { createEventDispatcher } from 'svelte';
	const dispatch = createEventDispatcher();
	const onClick = (e) => dispatch('click', e);
snippet emit
	import { createEventDispatcher } from 'svelte';
	const dispatch = createEventDispatcher();
	const onClick = (e) => dispatch('click', e);
snippet dispatch
	import { createEventDispatcher } from 'svelte';
	const dispatch = createEventDispatcher();
	const onClick = (e) => dispatch('click', e);
