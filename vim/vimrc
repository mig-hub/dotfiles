" Indentation
set autoindent
set smartindent
set shiftwidth=2
set tabstop=2
set expandtab
augroup TabExceptions
  autocmd!
  autocmd FileType make setlocal noexpandtab
augroup END
let g:rust_recommended_style = 0

" Search options
set ignorecase
set smartcase
set incsearch
set hlsearch
set path+=**
set wildmenu

" No backup or swap files
set nobackup
set noswapfile

" Misc
set ruler
set colorcolumn=81
set guifont=Monaco:h24
set backspace=indent,eol,start
set nofoldenable
set laststatus=2
set statusline=%.30F\ %y%=%l/%L
let g:vim_markdown_folding_disabled=1

" Digraph
set digraph
inoremap <C-k><C-k> <Esc>:help digraph-table<CR>

" Mappings

" Autoclosings
inoremap '' ''<Left>
inoremap "" ""<Left>
inoremap [] []<Left>
inoremap [<CR> [<CR>]<Esc>O
inoremap [' ['']<Left><Left>
inoremap [: [:]<Left>
inoremap {<Space> {<Space><Space>}<Left><Left>
inoremap {<CR> {<CR>}<Esc>O
inoremap () ()<Left>
inoremap (<CR> (<CR>)<Esc>O
inoremap <> <><Left>
inoremap </ </><Left>
inoremap `` ``<Left>
inoremap ``` ```
inoremap ```<CR> ```<CR>```<Esc>O
inoremap /* /**/<Left><Left>
inoremap /*<Space> /*<Space><Space>*/<Left><Left><Left>
inoremap /*<CR> /*<CR>*/<Esc>O
inoremap <C-l> <Right>
" Save
nnoremap ss :w<CR>
vnoremap ss <Esc>:w<CR>
inoremap jk <Esc>:w<CR>
set timeoutlen=1000 ttimeoutlen=0
" Quickly edit vimrc
nnoremap <leader>ev :tabe $MYVIMRC<CR>
" Visual up/down
noremap j gj
noremap k gk
noremap gj j
noremap gk k
" Indenting
vnoremap < <gv
vnoremap > >gv
vnoremap <C-h> <gv
vnoremap <C-l> >gv
nnoremap <C-h><C-h> <<
nnoremap <C-l><C-l> >>
" Select line without indentation
nnoremap vv ^vg_
" Move up/down faster
nnoremap <C-j> 5jzz
nnoremap <C-k> 5kzz
" Select all
nnoremap <leader>a ggVG
" Quick colon
nnoremap <Space> :
vnoremap <Space> :
" Add empty lines
nnoremap <Leader><CR> o<Esc>k
" Break line
nnoremap <CR> i<CR><Esc>k$
nnoremap s ^f{%i<CR><Esc>k^f{wi<CR><Esc>^
" Synchronize clipboard
set clipboard^=unnamed
" nnoremap <Leader>p "+p
" nnoremap <Leader>P "+P
" Previous tab
nnoremap gr gT
" Search with magic on
nnoremap / /\v
" Center when searching
nnoremap n nzz
" Change dashes to underscores on current word
inoremap <C-t> <esc>viW:s/-/_/g<CR>gv<esc>a
" Make current word uppercase (for constants)
inoremap <C-u> <esc>gUiwEa
" Switch absolute/relative line number
set number
set relativenumber
nnoremap <C-n> :set relativenumber!<CR>

" Netrw
let g:netrw_sort_options="i"
let g:netrw_banner=0

" load matchit
runtime macros/matchit.vim

" Filetypes
filetype plugin indent on
augroup RecognizeFiles
  autocmd!
  autocmd BufRead,BufNewFile *.ru set filetype=ruby
  autocmd BufRead,BufNewFile Gemfile set filetype=ruby
  autocmd BufRead,BufNewFile *.json set filetype=javascript
  autocmd BufRead,BufNewFile *.muttrc set filetype=muttrc
augroup END

augroup Misc
  autocmd!
  " automatically reload vimrc when it's saved
  autocmd BufWritePost ~/.dotfiles/vim/vimrc so %
  " autocmd FileType css inoremap <buffer> :<Space> :<Space>;<Left>
augroup END

" Init Pathogen for plugins
call pathogen#infect()

" Syntax color
syntax on
set background=dark
colorscheme solarized

" Change cursor on insert mode for iTerm
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

