#!/usr/bin/env ruby

require 'webrick'

root = File.expand_path(ARGV.length > 0 ? ARGV[0] : '.')
$not_found_page = ENV['NOT_FOUND_PAGE'] || '404.html'
$single_page = ARGV.length > 1 ? ARGV[1] : 'index.html'

options = {
  :Port => ENV['PORT'] || 8080,
  :DocumentRoot => root
}

if File.exist?(File.join(root, $not_found_page))
  WEBrick::HTTPResponse.class_eval do
    def create_error_page
      @header["Content-Type"] = "text/html; charset=UTF-8"
      @body = IO.read(File.join(@config[:DocumentRoot], $not_found_page))
    end
  end
elsif File.exist?(File.join(root, $single_page))
  WEBrick::HTTPResponse.class_eval do
    def create_error_page
      self.status = 200
      @header["Content-Type"] = "text/html; charset=UTF-8"
      @body = IO.read(File.join(@config[:DocumentRoot], $single_page))
    end
  end
  options[:DirectoryIndex] = WEBrick::Config::HTTP[:DirectoryIndex] + [$single_page]
end

server = WEBrick::HTTPServer.new options

trap 'INT' do server.shutdown end
trap 'TERM' do server.shutdown end

puts "Usage: [PORT=8080] [NOT_FOUND_PAGE='404.html'] serve [document-root='.'] [single-page='index.html']"
puts "Usage: serve"
puts "Usage: serve build"
puts "Usage: serve build 200.html"
puts "Usage: PORT=3000 serve build 200.html"
puts ""
puts "Starting..."
puts "Root: #{root}"
puts "SPA: #{$single_page}"
server.start

