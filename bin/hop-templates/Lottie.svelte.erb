<script>

  let {
    src,
    loop = false,
    autoplay = false,
    onerror = () => {},
    onframe = () => {},
    oncomplete = () => {},
  } = $props();

  // import lottie from "lottie-web";
  let lottie;

  let div;
  let anim;

  import { onMount } from 'svelte';

  onMount(async () => {
    try {

      // Needs to be loaded dynamically because it needs to load in browser
      lottie = (await import('lottie-web')).default;
      anim = lottie.loadAnimation({
        container: div,
        path: src,
        loop,
        autoplay,
        renderer: 'svg',
        rendererSettings: {
          preserveAspectRatio: "xMidYMid meet",
          clearCanvas: false,
          progressiveLoad: true,
          hideOnTransparent: true
        }
      });

    } catch (err) {

      onerror({
        detail: {
          error: err,
        }
      });

    }

    if ( anim ) {

      anim.addEventListener( "enterFrame", () => {
        let frame = anim.currentFrame;
        let progress = ( anim.currentFrame / anim.totalFrames) * 100;
        onframe({
          frame,
          progress,
        });
      });

      anim.addEventListener( "complete", () => {
        oncomplete();
      });
    }

  });

</script>

<div bind:this={ div }>
</div>

